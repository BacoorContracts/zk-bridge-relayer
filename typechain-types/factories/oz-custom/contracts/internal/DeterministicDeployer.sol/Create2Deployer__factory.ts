/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  Create2Deployer,
  Create2DeployerInterface,
} from "../../../../../oz-custom/contracts/internal/DeterministicDeployer.sol/Create2Deployer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "instance",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "factory",
        type: "string",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt_",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash_",
        type: "bytes32",
      },
    ],
    name: "instanceOf",
    outputs: [
      {
        internalType: "address",
        name: "instance",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isDeployed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class Create2Deployer__factory {
  static readonly abi = _abi;
  static createInterface(): Create2DeployerInterface {
    return new utils.Interface(_abi) as Create2DeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Create2Deployer {
    return new Contract(address, _abi, signerOrProvider) as Create2Deployer;
  }
}
