/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBlacklistableUpgradeable,
  IBlacklistableUpgradeableInterface,
} from "../../../../../oz-custom/contracts/internal-upgradeable/interfaces/IBlacklistableUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Blacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Whitelisted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setUserStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBlacklistableUpgradeable__factory {
  static readonly abi = _abi;
  static createInterface(): IBlacklistableUpgradeableInterface {
    return new utils.Interface(_abi) as IBlacklistableUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBlacklistableUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IBlacklistableUpgradeable;
  }
}
