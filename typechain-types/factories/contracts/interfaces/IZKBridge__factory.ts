/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IZKBridge,
  IZKBridgeInterface,
} from "../../../contracts/interfaces/IZKBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ZKBridge__AlreadySpent",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKBridge__InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKBridge__LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKBridge__NonZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ZKBridge__UnknownRoot",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ZKBridge__UsedCommitment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ZKBridge__WrappedTokenNotSupported",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leafIdx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "stateRoot",
        type: "uint256",
      },
    ],
    name: "NewBridgeState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IVerifier",
        name: "currentAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IVerifier",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "VerifierUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
];

export class IZKBridge__factory {
  static readonly abi = _abi;
  static createInterface(): IZKBridgeInterface {
    return new utils.Interface(_abi) as IZKBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IZKBridge {
    return new Contract(address, _abi, signerOrProvider) as IZKBridge;
  }
}
